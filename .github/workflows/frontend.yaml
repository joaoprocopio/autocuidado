# name: "frontend"

# on:
#   push:
#     branches:
#       - "main"
#     paths:
#       - "frontend/**/*.c?jsx?"
#       - "frontend/**/*.c?tsx?"
#       - "frontend/**/*.json"
#       - "frontend/**/*.css"
#   workflow_dispatch:

# defaults:
#   run:
#     working-directory: "./frontend"
#     shell: "bash"

# env:
#   TEST_IMAGE: "${{ secrets.AZ_ACR_SERVER }}/frontend:test"
#   PROD_IMAGE: "${{ secrets.AZ_ACR_SERVER }}/frontend:prod"

# concurrency:
#   group: "${{ github.workflow }}-${{ github.ref }}"
# jobs:
#   deploy:
#     runs-on: "ubuntu-latest"
#     steps:
#       - name: "checkout"
#         uses: "actions/checkout@v4"

#       - name: "qemu"
#         uses: "docker/setup-qemu-action@v3"

#       - name: "buildx"
#         uses: "docker/setup-buildx-action@v3"

#       - name: "registry"
#         uses: "docker/login-action@v3"
#         with:
#           registry: "${{ secrets.AZ_ACR_SERVER }}"
#           username: "${{ secrets.AZ_ACR_USERNAME }}"
#           password: "${{ secrets.AZ_ACR_PASSWORD }}"

#       - name: "build"
#         uses: "docker/build-push-action@v5"
#         with:
#           push: false
#           pull: false
#           load: true
#           target: "base"
#           tags: "${{ env.TEST_IMAGE }}"
#           context: "./frontend"

#       - name: "lint"
#         run: "docker run --rm ${{ env.TEST_IMAGE }} npm run lint"

#       - name: "release"
#         uses: "docker/build-push-action@v5"
#         with:
#           push: true
#           pull: true
#           load: true
#           target: "build"
#           tags: "${{ env.PROD_IMAGE }}"
#           context: "./frontend"

#       - name: "login"
#         uses: "azure/login@v2"
#         with:
#           client-id: "${{ secrets.AZ_CLIENT_ID }}"
#           tenant-id: "${{ secrets.AZ_TENANT_ID }}"
#           subscription-id: "${{ secrets.AZ_SUBSCRIPTION_ID }}"

#       - name: "deploy"
#         uses: "azure/CLI@v1"
#         with:
#           azcliversion: "latest"
#           inlineScript: "az container restart --resource-group ${{ vars.AZ_RESOURCE_GROUP }} --name ${{ vars.AZ_CONTAINER_FRONTEND_PROD }}"
